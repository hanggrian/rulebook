block.tag.punctuation=End ''{0}'' with a period.
qualifier.consistency=Remove redundant qualifier.
# error
exception.extending=Extend from Exception class.
# fold
assignment.wrapping=Break assignment into newline.
empty.code.block.unwrapping=Unexpected whitespace between '{}'.
lambda.wrapping=Expression should start after newline.
parameter.wrapping.parenthesis=Do not join parentheses with parameters.
parameter.wrapping.argument=Each parameter should have a newline.
# flow
control.flow.bracing=Missing braces.
default.flattening=Remove redundant 'default'.
else.flattening=Remove redundant 'else'.
if.else.flattening.invert=Invert 'if' condition.
if.else.flattening.lift=Lift 'else' and add 'return' in 'if'.
switch.case.branching=Replace 'switch' with 'if'.
# layout
builtin.function.position=Put ''{0}'' last.
class.member.ordering=Put member ''{0}'' before ''{1}''.
# name
class.final.name.disallowing.all=Avoid meaningless word ''{0}''.
class.final.name.disallowing.util=Utility class should be named ''{0}''.
# value
float.literal.tagging.num=Floats are tagged by 'f'.
float.literal.tagging.hex=Hexadecimals are tagged by 'F'.
# whitespace
block.comment.line.joining=Unexpected consecutive newline after '*'.
block.comment.line.trimming.first=Unexpected newline after '/**'.
block.comment.line.trimming.last=Unexpected newline before '*/'.
case.line.spacing.missing=Missing newline after multiline branch.
case.line.spacing.unexpected=Unexpected newline after single-line branch.
code.block.line.trimming.first=Unexpected newline after '{'.
code.block.line.trimming.last=Unexpected newline before '}'.
comment.line.joining=Unexpected consecutive newline after '//'.
comment.line.trimming=Unexpected newline after '//'.
comment.spacing=Missing space after '//'.
file.initial.line.trimming=Unexpected newline at the beginning.
# others
class=class
constructor=constructor
function=function
property=property
