<?xml version="1.0" encoding="UTF-8"?>
<!--
  CodeNarc configuration file for Rulebook, find out more at https://github.com/hendraanggrian/rulebook/.

  Derived from https://github.com/google/protobuf-gradle-plugin/blob/master/config/codenarc/codenarc.xml
  with few changes:

  - Add third-party rules from https://github.com/hendraanggrian/rulebook/wiki.
  - Lenient basics by excluding in `unused.xml`:
    - `EmptyCatchBlock`
    - `EmptyClass`
    - `EmptyElseBlock`
    - `EmptyFinallyBlock`
    - `EmptyForStatement`
    - `EmptyIfStatement`
    - `EmptyInstanceInitializer`
    - `EmptyMethod`
    - `EmptyStaticInitializer`
    - `EmptySwitchStatement`
    - `EmptySynchronizedStatement`
    - `EmptyTryBlock`
    - `EmptyWhileStatement`
  - Exclude `EmptyMethod` from `basics.xml`
 -->
<ruleset xmlns="http://codenarc.org/ruleset/1.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://codenarc.org/ruleset/1.0 http://codenarc.org/ruleset-schema.xsd"
         xsi:noNamespaceSchemaLocation="http://codenarc.org/ruleset-schema.xsd">

  <description>Rulebook third-party rules</description>

  <ruleset-ref path="rulesets/basic.xml">
    <exclude name="EmptyCatchBlock"/>
    <exclude name="EmptyClass"/>
    <exclude name="EmptyElseBlock"/>
    <exclude name="EmptyFinallyBlock"/>
    <exclude name="EmptyForStatement"/>
    <exclude name="EmptyIfStatement"/>
    <exclude name="EmptyInstanceInitializer"/>
    <exclude name="EmptyMethod"/>
    <exclude name="EmptyStaticInitializer"/>
    <exclude name="EmptySwitchStatement"/>
    <exclude name="EmptySynchronizedStatement"/>
    <exclude name="EmptyTryBlock"/>
    <exclude name="EmptyWhileStatement"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/braces.xml"/>
  <ruleset-ref path="rulesets/concurrency.xml"/>
  <ruleset-ref path="rulesets/convention.xml">
    <exclude name="PublicMethodsBeforeNonPublicMethods"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/design.xml">
    <exclude name="Instanceof"/>
    <exclude name="ImplementationAsType"/>
    <exclude name="BuilderMethodWithSideEffects"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/dry.xml">
    <exclude name="DuplicateStringLiteral"/>
    <exclude name="DuplicateNumberLiteral"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/exceptions.xml"/>
  <ruleset-ref path="rulesets/formatting.xml">
    <exclude name="ClassEndsWithBlankLine"/>
    <exclude name="ClassStartsWithBlankLine"/>
    <exclude name="Indentation"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/generic.xml"/>
  <ruleset-ref path="rulesets/grails.xml"/>
  <ruleset-ref path="rulesets/groovyism.xml"/>
  <ruleset-ref path="rulesets/imports.xml"/>
  <ruleset-ref path="rulesets/jdbc.xml"/>
  <ruleset-ref path="rulesets/junit.xml">
    <exclude name="JUnitTestMethodWithoutAssert"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/logging.xml"/>
  <ruleset-ref path="rulesets/naming.xml">
    <exclude name="ConfusingMethodName"/>
    <!-- unit tests have arbitrary names -->
    <exclude name="MethodName"/>
    <exclude name="FactoryMethodName"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/security.xml">
    <exclude name="JavaIoPackageAccess"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/serialization.xml"/>
  <ruleset-ref path="rulesets/size.xml">
    <!-- AbcMetric, CrapMetric and CyclomaticComplexity require external libs -->
    <exclude name="AbcMetric"/>
    <exclude name="CrapMetric"/>
    <exclude name="CyclomaticComplexity"/>
    <exclude name="NestedBlockDepth"/>
    <exclude name="MethodCount"/>
  </ruleset-ref>
  <ruleset-ref path="rulesets/unnecessary.xml">
    <exclude name="UnnecessaryCollectCall"/>
    <exclude name="UnnecessaryGetter"/>

    <exclude name="UnnecessaryGString"/>
    <exclude name="UnnecessarySetter"/>
    <exclude name="UnnecessaryPublicModifier"/>
    <exclude name="UnnecessaryReturnKeyword"/>

    <!-- Poor suggestion when using static typing -->
    <exclude name="UnnecessaryObjectReferences"/>
  </ruleset-ref>

  <!-- Third-party rules -->
  <rule class="com.hendraanggrian.rulebook.codenarc.InvertIfConditionRule"/>
  <rule class="com.hendraanggrian.rulebook.codenarc.RemoveMeaninglessWordRule"/>
  <rule class="com.hendraanggrian.rulebook.codenarc.RenameAbbreviationWordRule"/>
  <rule class="com.hendraanggrian.rulebook.codenarc.RenameUncommonGenericsRule"/>
</ruleset>
