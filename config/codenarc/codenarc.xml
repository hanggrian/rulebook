<?xml version="1.0" encoding="UTF-8"?>
<!--
  The standard Rulebook CodeNarc configuration.

  Rulebook: https://github.com/hanggrian/rulebook/
  CodeNarc: https://codenarc.org/
  Source template: https://github.com/google/protobuf-gradle-plugin/blob/master/config/codenarc/codenarc.xml
-->
<ruleset
  xmlns="http://codenarc.org/ruleset/1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://codenarc.org/ruleset/1.0 http://codenarc.org/ruleset-schema.xsd"
  xsi:noNamespaceSchemaLocation="http://codenarc.org/ruleset-schema.xsd">

  <description>Rulebook third-party rules</description>

  <ruleset-ref path="rulesets/basic.xml">
    <exclude name="EmptyCatchBlock"/>
    <exclude name="EmptyClass"/>
    <exclude name="EmptyElseBlock"/>
    <exclude name="EmptyFinallyBlock"/>
    <exclude name="EmptyForStatement"/>
    <exclude name="EmptyIfStatement"/>
    <exclude name="EmptyInstanceInitializer"/>
    <exclude name="EmptyMethod"/>
    <exclude name="EmptyStaticInitializer"/>
    <exclude name="EmptySwitchStatement"/>
    <exclude name="EmptySynchronizedStatement"/>
    <exclude name="EmptyTryBlock"/>
    <exclude name="EmptyWhileStatement"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/braces.xml"/>

  <ruleset-ref path="rulesets/concurrency.xml"/>

  <ruleset-ref path="rulesets/convention.xml">
    <exclude name="CompileStatic"/>
    <exclude name="NoDouble"/>
    <exclude name="NoFloat"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/design.xml">
    <exclude name="Instanceof"/>
    <exclude name="ImplementationAsType"/>
    <exclude name="BuilderMethodWithSideEffects"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/dry.xml">
    <exclude name="DuplicateStringLiteral"/>
    <exclude name="DuplicateNumberLiteral"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/exceptions.xml"/>

  <ruleset-ref path="rulesets/formatting.xml">
    <rule-config name="LineLength">
      <property name="length" value="100"/>
    </rule-config>

    <exclude name="ClassEndsWithBlankLine"/>
    <exclude name="ClassStartsWithBlankLine"/>
    <exclude name="Indentation"/>
    <exclude name="SpaceAfterOpeningBrace"/>
    <exclude name="SpaceBeforeClosingBrace"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/generic.xml"/>

  <ruleset-ref path="rulesets/grails.xml"/>

  <ruleset-ref path="rulesets/groovyism.xml"/>

  <ruleset-ref path="rulesets/imports.xml">
    <rule-config name="MisorderedStaticImports">
      <property name="comesBefore" value="false"/>
    </rule-config>
  </ruleset-ref>

  <ruleset-ref path="rulesets/jdbc.xml"/>

  <ruleset-ref path="rulesets/junit.xml">
    <exclude name="JUnitTestMethodWithoutAssert"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/naming.xml">
    <exclude name="ConfusingMethodName"/>
    <!--exclude name="MethodName"/-->
    <exclude name="FactoryMethodName"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/security.xml">
    <exclude name="JavaIoPackageAccess"/>
  </ruleset-ref>

  <ruleset-ref path="rulesets/serialization.xml"/>

  <ruleset-ref path="rulesets/size.xml">
    <!-- AbcMetric, CrapMetric and CyclomaticComplexity require external libs -->
    <exclude name="AbcMetric"/>
    <exclude name="CrapMetric"/>
    <exclude name="CyclomaticComplexity"/>
    <exclude name="NestedBlockDepth"/>
    <exclude name="MethodCount"/>
  </ruleset-ref>

  <!--ruleset-ref path='rulesets/unused.xml'/-->

  <ruleset-ref path="rulesets/unnecessary.xml">
    <exclude name="UnnecessaryCollectCall"/>
    <exclude name="UnnecessaryGetter"/>

    <exclude name="UnnecessaryGString"/>
    <exclude name="UnnecessarySetter"/>
    <exclude name="UnnecessaryPublicModifier"/>
    <exclude name="UnnecessaryReturnKeyword"/>

    <!-- Poor suggestion when using static typing -->
    <exclude name="UnnecessaryObjectReferences"/>

    <!-- Clash with 'UtilityClassInstanceHiding' -->
    <exclude name="UnnecessaryConstructor"/>
  </ruleset-ref>

  <!-- General -->
  <rule class="com.hanggrian.rulebook.codenarc.QualifierConsistencyRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.UtilityClassInstanceHidingRule"/>

  <!-- Flow -->
  <rule class="com.hanggrian.rulebook.codenarc.DefaultFlatteningRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.ElseFlatteningRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.IfElseFlatteningRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.SwitchCaseBranchingRule"/>

  <!-- Fold -->
  <rule class="com.hanggrian.rulebook.codenarc.AssignmentWrappingRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.OperatorWrappingRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.ParameterWrappingRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.StatementWrappingRule"/>

  <!-- Layout -->
  <rule class="com.hanggrian.rulebook.codenarc.BuiltinFunctionPositionRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.ClassMemberOrderingRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.ImportOrderingRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.InnerClassPositionRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.OverloadFunctionPositionRule"/>

  <!-- Name -->
  <rule class="com.hanggrian.rulebook.codenarc.ClassFinalNameDisallowingRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.ClassNameAcronymCapitalizationRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.GenericsNameAllowingRule"/>
  <rule class="com.hanggrian.rulebook.codenarc.VariableNameDisallowingRule"/>

  <!-- Value -->
  <rule class="com.hanggrian.rulebook.codenarc.FloatLiteralTaggingRule"/>

  <!-- Whitespace -->
  <rule class="org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule"/>
  <rule class="org.codenarc.rule.comments.JavadocEmptyFirstLineRule"/>
  <rule class="org.codenarc.rule.comments.JavadocEmptyLastLineRule"/>
  <rule class="org.codenarc.rule.comments.SpaceAfterCommentDelimiterRule"/>
  <rule class="org.codenarc.rule.comments.SpaceBeforeCommentDelimiterRule"/>
</ruleset>
